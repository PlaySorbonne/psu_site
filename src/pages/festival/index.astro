---
// You can override --main-color --dark-color and --secondary-color
import Header from "@/components/global/Header.astro";
import Footer from "@/components/global/Footer.astro";
import HeaderL from "@/layouts/partials/HeaderL.astro";
import type { ClubName } from "@/helpers";

import { clubLogos } from "@/assets/logos";
import { miscIcons } from "@/assets/misc";
import { Image } from "astro:assets";
import Logo from "@/assets/logo_festival.png";

interface Props {
  logo?: ClubName;
  title: string;
  prefetchs?: string[];
}

const { logo, title, prefetchs } = Astro.props;

const programme = [
  {
    icon: miscIcons.dices,
    desc: "Jeux de plateau",
  },
  {
    icon: miscIcons.mic,
    desc: "Conférences",
  },
  {
    icon: miscIcons.penRuler,
    desc: "Jeux indés",
  },
  {
    icon: miscIcons.proj,
    desc: "Expositions",
  },
  {
    icon: miscIcons.tetris,
    desc: "Rétro-gaming",
  },
  {
    icon: miscIcons.trophy,
    desc: "E-Sport",
  },
];
---

<HeaderL title={title} prefetchs={prefetchs}>
  <header class="header">
    <a href="/">
      <Image src={clubLogos.psu} alt="" class="logo__header" height="80" />
    </a>
  </header>

  <section class="hero" id="bg">
    <div class="content__hero">
      <div class="info__hero">
        <!-- <img class="psu__hero" src=`${clubLogos.champsuOnly.src}` alt=""> -->
        <h1 class="title__hero">Play Sorbonne Festival</h1>
        <h2 class="subtitle__hero">Le 28 septembre 2024</h2>
        <div class="buttons__hero">
          <a href="#prog" class="button__hero">En savoir plus</a>
          <a href="/festival" class="button__hero">S'inscrire</a>
        </div>
      </div>
      <Image src={Logo} alt="" class="logo__hero" width="600" />
    </div>
  </section>
  <section class="prog" id="prog">
    <div class="content">
      <div class="info__prog">
        <h1 class="title title__prog">Programme</h1>
        <p class="desc-fest__prog">
          Play Sorbonne Université est le festival étudiant du jeu. Organisé par
          des passionnés, il ambitionne de célébrer et faire découvrir la
          culture du jeu sous toutes ses formes : jeux vidéos et jeux de plateau
          sont réunis pour cette manifestation. Le festival rassemble joueurs,
          développeurs, éditeurs, associations et tous ceux qui font vivre les
          jeux. L'événement s'adresse aux pro-gamers comme aux non-joueurs qui
          souhaitent découvrir cet univers.
        </p>
      </div>

      <div class="content__prog">
        {
          programme.map(({ icon, desc }) => (
            <div class="item__prog">
              <Image src={icon} alt="icon" class="icon__prog" width="50" />
              <p class="desc__prog">{desc}</p>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <section class="part" id="part">
    <div class="content">
      <div class="main__part">
        <h1 class="title title__part">Nos partenaires (?)</h1>

        <h2 class="subtitle subtitle__part">Institution</h2>

        <div class="content__part"></div>

        <h2 class="subtitle subtitle__part">Associations & stands</h2>

        <div class="content__part"></div>

        <h2 class="subtitle subtitle__part">Developpeurs</h2>

        <div class="content__part"></div>
      </div>
    </div>
  </section>

  <Footer />
</HeaderL>

<style>
  :root {
    --main-color: 232, 101, 173;
    --secondary-color: 41, 200, 255;
    --dark-color: 61, 61, 111;
    --main-bg: linear-gradient(
      190deg,
      rgba(2, 0, 36, 1) 0%,
      rgb(41, 13, 97) 55%,
      #29105e 80%,
      rgb(75, 9, 44) 100%
    );
  }
  body {
    background: linear-gradient(
      190deg,
      rgba(2, 0, 36, 1) 0%,
      rgb(41, 13, 97) 55%,
      #29105e 80%,
      rgb(75, 9, 44) 100%
    );
    overflow-x: hidden;
  }

  section {
    width: 100%;
  }

  section .content {
    max-width: 1000px;
    margin: 0 auto;
  }

  .header {
    position: fixed;
    top: 0;
    height: 100px;
    width: 100vw;
    background-color: rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);

    color: whitesmoke;
    border-bottom: rgba(255, 255, 255, 0.2) 1px solid;
    transition: top 0.3s;

    display: flex;
    align-items: center;
    justify-content: center;
  }

  .hero {
    background: url(/assets/festival/bg_hero.png);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: left bottom;
    width: 100%;
    height: 100vh;
  }

  .content__hero {
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    justify-content: space-evenly;
    height: 100%;
  }

  .logo__hero {
    height: auto;
    border-radius: 10px;
    opacity: 0;
    max-width: 30%;
  }

  @media (max-width: 768px) {
    .logo__hero {
      opacity: 1;
      max-width: 100%;
      width: 90%;
      padding: 30px;
    }
    .hero {
      background: linear-gradient(
        90deg,
        rgba(2, 0, 36, 1) 0%,
        rgba(2, 0, 36, 1) 90%,
        rgba(2, 0, 36, 1) 100%
      );
    }
    .content__hero {
      flex-direction: column;
      padding-top: 100px;
    }
  }

  .buttons__hero {
    display: flex;
    gap: 1rem;
    justify-content: space-around;
    width: 100%;
  }

  .button__hero {
    padding: 0.5rem 1rem;
    background-color: rgb(var(--main-color));
    color: white;
    border: none;
    border-radius: 5px;
    font-weight: bold;
    text-decoration: none;
  }

  .info__hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .title__hero {
    color: white;
    font-size: 3rem;
    font-weight: bold;
  }

  .subtitle__hero {
    color: var(--secondary-color);
  }

  .psu__hero {
    width: 100px;
    height: 100px;
  }

  .temp {
    height: 100vh;
  }

  @media (max-width: 1000px) {
    .title__hero {
      font-size: 2rem;
    }
  }

  .prog {
    /* background-color: var(--main-color); */
    color: white;
    padding: 2rem;
  }

  .info__prog {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }

  .title {
    color: white;
    font-size: 2rem;
    font-weight: bold;
  }

  .content__prog {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
  }

  @media (max-width: 768px) {
    .content__prog {
      gap: 0;
    }
  }

  .item__prog {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background-color: rgba(var(--main-color), 0.5);
    margin: 1rem;
    padding: 0 10px;
    border-radius: 10px;
    transition: all 0.5s ease-in-out;
  }

  .item__prog:hover {
    background-color: rgba(var(--main-color), 0.8);
    transform: scale(1.1);
    transition: all 0.5s ease-in-out;
  }

  .desc__prog {
    font-weight: bold;
  }

  .subtitle {
    color: white;
    font-size: 1.5rem;
    font-weight: bold;
  }
  
  .main__part {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    justify-content: center;
    align-items: center;
  }
  
  .content__part {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    // keep track of previous scroll position
    let prevScrollPos = window.scrollY;

    window.addEventListener("scroll", function () {
      // current scroll position
      const currentScrollPos = window.scrollY;

      if (prevScrollPos > currentScrollPos || currentScrollPos < 80) {
        // user has scrolled up
        document.querySelector<HTMLElement>(".header").style.top = "0";
      } else {
        // user has scrolled down
        document.querySelector<HTMLElement>(".header").style.top = "-200px";
      }

      // update previous scroll position
      prevScrollPos = currentScrollPos;
    });
  });
</script>

<style>
  /* big thanks to https://codepen.io/csigel/pen/dyMbvWm */
  [class^="smoke"] {
    opacity: 0;
    position: absolute;
    width: 5%;
    height: 5%;
    background: linear-gradient(
      to bottom,
      rgba(231, 16, 16, 0.8),
      rgba(0, 0, 0, 0)
    );
    transform: translate(-50%, -50%);
    border-radius: 50%;
    filter: blur(20px);
  }

  .smoke1 {
    animation: smoke1 4s infinite;
  }
  @keyframes smoke1 {
    20% {
      opacity: 1;
    }
    100% {
      width: 10%;
      height: 20%;
      margin-top: -30%;
      margin-left: -30%;
      opacity: 0;
    }
  }
  .smoke2 {
    margin-left: 5%;
    animation: smoke2 4s infinite;
    animation-delay: -2s;
  }
  @keyframes smoke2 {
    20% {
      opacity: 1;
    }
    100% {
      width: 15%;
      height: 30%;
      margin-top: -20%;
      margin-left: -20%;
      opacity: 0;
    }
  }
  .smoke3 {
    margin-left: 8%;
    animation: smoke3 4s infinite;
  }
  @keyframes smoke3 {
    20% {
      opacity: 1;
    }
    100% {
      width: 5%;
      height: 35%;
      margin-top: -20%;
      margin-left: -25%;
      opacity: 0;
    }
  }
  .smoke4 {
    margin-left: -5%;
    animation: smoke4 4s infinite;
    animation-delay: -2s;
  }
  @keyframes smoke4 {
    20% {
      opacity: 1;
    }
    100% {
      width: 10%;
      height: 10%;
      margin-top: -10%;
      margin-left: -20%;
      opacity: 0;
    }
  }

</style>

<script>
  const smokes = document.querySelectorAll<HTMLElement>("[class^='smoke']");
  smokes.forEach((smoke) => {
    setInterval(() => {
      smoke.style.top = `${Math.floor(Math.random() * 100)}%`;
      smoke.style.left = `${Math.floor(Math.random() * 100)}%`;
    }, 4000);
  });
</script>

---
interface Props {
  imgs: {
    src: string;
    alt: string;
    text: string;
  }[];
  className?: string;
}

const { imgs, className } = Astro.props;
---

<div class="slide-container">
  {
    imgs.map((item, index) => {
      return (
        <div class="custom-slider fade">
          <div class="slide-index">
            {index + 1} / {imgs.length}
          </div>
          <img class="slide-img" src={item.src} alt={item.alt} />
          <div class="slide-text">{item.text}</div>
        </div>
      );
    })
  }
  <a class="prev" onclick="plusSlides(-1); "></a>
  <a class="next" onclick="plusSlides(1); "></a>
</div>
<br />
<div class="slide-dot">
  {
    imgs.map((_, index) => {
      return (
        <span class="dot" onclick={`currentSlide(${index + 1}); `}></span>
      );
    })
  }
</div>

<style>
  .custom-slider {
    display: none;
  }
  .slide-container {
    max-width: 800px;
    position: relative;
    margin: auto;
  }
  .prev,
  .next {
    cursor: pointer;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    color: white;
    font-size: 30px;
    background-color: rgba(0, 0, 0, 0);
    transition: background-color 0.6s ease;
  }
  .prev {
    left: 15px;
  }
  .next {
    right: 15px;
  }
  .prev:hover,
  .next:hover {
    background-color: rgba(0, 0, 0, 0.5);
  }
  .slide-text {
    position: absolute;
    color: #ffffff;
    font-size: 15px;
    padding: 15px;
    bottom: 15px;
    width: 100%;
    text-align: center;
  }
  .slide-index {
    color: #ffffff;
    font-size: 13px;
    padding: 15px;
    position: absolute;
    top: 0;
  }
  .slide-img {
    width: 100%;
    height: 300px;
    object-fit: cover;
    object-position: center;
  }
  .slide-dot {
    text-align: center;
  }
  .dot {
    cursor: pointer;
    height: 10px;
    width: 10px;
    margin: 0 2px;
    background-color: #999999;
    border-radius: 50%;
    display: inline-block;
    transition: background-color 0.6s ease;
  }
  .active,
  .dot:hover {
    background-color: #111111;
  }
  .fade {
    animation-name: fade;
    animation-duration: 1s;
  }
  @keyframes fade {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
</style>

<script>
  var slideIndex = 1;
  showSlides(slideIndex);

  function plusSlides(n) {
    showSlides((slideIndex += n));
  }

  function currentSlide(n) {
    showSlides((slideIndex = n));
  }

  function showSlides(n) {
    var i;
    var slides = document.getElementsByClassName(
      "custom-slider"
    );
    var dots = document.getElementsByClassName("dot");
    if (n > slides.length) {
      slideIndex = 1;
    }
    if (n < 1) {
      slideIndex = slides.length;
    }
    for (i = 0; i < slides.length; i++) {
      slides[i].style.display = "none";
    }
    for (i = 0; i < dots.length; i++) {
      dots[i].className = dots[i].className.replace(" active", "");
    }
    slides[slideIndex - 1].style.display = "block";
    dots[slideIndex - 1].className += " active";
  }
</script>
